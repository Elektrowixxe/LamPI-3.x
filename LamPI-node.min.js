var debug=1,poll_interval=6E3,log_interval=12E4,alarm_interval=2E3,timer_interval=3E4,webPort=8080,udpPort=5001,tcpPort=5002,sockPort=5004,tcnt=0,zroot,devices,clients=[],loops=[],config={},lampi_devices,lampi_admin=[],homeDir="/home/pi",logDir=homeDir+"/log",rrdDir=homeDir+"/rrd",wwwDir=homeDir+"/www",fs=require("fs"),strip=require("strip-json-comments");
function readConfig(){var b=fs.readFileSync(wwwDir+"/config/database.cfg","utf8"),b=JSON.parse(strip(b));3<=debug&&(logger("readConfig:: config read: ",3),console.log(b));return b}
process.argv.forEach(function(b,c,a){console.log(c+": "+b);switch(b){case "-i":for(b=0;b<loops.length;b++)clearInterval(loops[b]);createDbase(function(a,c){logger("createDbase returned "+c,1)});loadDbase(function(a,c){null==a&&logger("init returned successful "+c,1);lampi_devices=config.devices;Object.keys(config).forEach(function(a){for(j=0;j<config[a].length;j++)str+=""+a+","+j+": "+config[a][j].name+"<br>";str+="<br>";logger("config: "+a)});str+="init done, restarting loops";logger(str,2);main(0,
"Restart main")})}});var serveStatic=require("serve-static"),express=require("express"),app=express();app.use(serveStatic(__dirname+"/www"));app.listen(webPort);
app.all("/init",function(b,c,a){logger("Accessing the init section ...",1);var d="",d=d+"init started<br>",d=d+("Suspending "+loops.length+" timers<br>");for(b=0;b<loops.length;b++)clearInterval(loops[b]);createDbase(function(a,b){a?logger("init:: ERROR: "+a):(logger("init:: createDbase returned "+b,1),Object.keys(config).forEach(function(a){logger("createDbase: "+a+", length: "+config[a].length);for(k=0;k<config[a].length;k++)d+=""+a+","+k+": "+config[a][k].name+"<br>";d+="<br>"}),logger("init:: Starting loadDbase"),
loadDbase(function(a,b){null==a&&logger("init:: loadDbase returned successful "+b,1);lampi_devices=config.devices;Object.keys(config).forEach(function(a){logger("loadDbase: "+a+", length: "+config[a].length);for(j=0;j<config[a].length;j++)d+=""+a+","+j+": "+config[a][j].name+"<br>";d+="<br>"});d+="<br>init:: done, restarting loops";logger(d,2);c.send(d);main(0,"init:: Restart Main")}))})});
app.all("/load",function(b,c,a){logger("Accessing the reload section ...",1);var d="",d=d+"reload started<br>",d=d+("Suspending "+loops.length+" timers<br>");for(b=0;b<loops.length;b++)clearInterval(loops[b]);loadDbase(function(a,b){null==a&&logger("load:: loadDbase returned successful "+b,1);lampi_devices=config.devices;Object.keys(config).forEach(function(a){logger("load::: "+a+", length: "+config[a].length);for(j=0;j<config[a].length;j++)d+=""+a+","+j+": "+config[a][j].name+"<br>";d+="<br>"});
d+="<br>load:: done, restarting loops";logger(d,2);c.send(d);main(0,"load:: restart Main")})});app.all("/weather",function(b,c,a){console.log("Accessing the weather section ...");c.send("weather")});var http=require("http");
function zwave_init(b){http.request({host:"192.168.2.52",path:"/ZWaveAPI/Data/0",port:"8083",method:"GET",headers:{"Content-Type":"application/json"}},function(c){var a="";c.on("data",function(c){a+=c});c.on("end",function(){3<=debug&&console.log(a);zroot=JSON.parse(a);devices=zroot.devices;logger("Successfully read Z-Wave Data, #devices: "+Object.keys(devices).length,1);b(null,"zwave_init done")})}).end()}
var zwave_upd_options={host:"192.168.2.52",path:"/ZWaveAPI/Data/"+(Math.floor(Date.now()/1E3)-alarm_interval),port:"8083",method:"GET",headers:{"Content-Type":"application/json"}},zwave_upd_cb=function(b){var c="";b.on("data",function(a){c+=a});b.on("end",function(){3<=debug&&console.log(c);var a=JSON.parse(c);Object.keys(a).forEach(function(c){var b=zroot,f=c.split("."),g;for(g in f.slice(0,-1))b=b[f[g]];b[f.slice(-1)]=a[c]});logger("Successfully read the Z-Wave Data stucture, Read "+Object.keys(a).length+
" records",2)})};function broadcast(b,c){logger("broadcast:: message: "+b,2);clients.forEach(function(a){switch(a.type){case "raw":logger("Broadcast to Rawsocket: "+a.name,2);1!=a.write(b)&&logger("broadcast:: raw socket error");break;case "ws":logger("Broadcast to Websocket: "+a.name,2);a.send(b,function(a){a&&logger("broadcast:: ws send error: "+a)});break;default:logger("broadcast:: unknown type: "+a.type)}})}
var HOST="0.0.0.0",net=require("net"),server=net.createServer(function(b){b.name=b.remoteAddress+":"+b.remotePort;b.type="raw";logger("SOCKET:: socket server connected to: "+b.name,1);clients.push(b);b.on("end",function(){logger("SOCKET:: socket server "+b.name+" disconnected",1);clients.splice(clients.indexOf(b),1)});b.on("text",function(c){logger("SOCKET:: socket server received text: "+c,1)});b.on("data",function(c){logger("SOCKET:: socket data received: "+c,2);socketHandler(c,b)});b.on("message",
function(c){logger("SOCKET:: socket message received: "+c,2);socketHandler(c,b)});b.on("upgrade",function(c,a,b){logger("SOCKET:: socket upgrade received: "+c,1);a.write(JSON.stringify({tcnt:868,type:"json",action:"alarm",scene:"",message:"NODE ALARM"}))});b.on("connect",function(){logger("SOCKET:: socket Connection Established ",1)})});server.listen(tcpPort,HOST,function(){logger("TCP server listening to addr:port: "+HOST+":"+tcpPort)});var WebSocketServer=require("ws").Server,wss=new WebSocketServer({port:sockPort});
wss.on("connection",function(b){b.name=b.upgradeReq.headers.origin;b.type="ws";clients.push(b);b.on("message",function(c){2<=debug&&console.log("WS received: %s",c);socketHandler(c,b)});b.on("close",function(){logger("WS:: socket "+b.name+" disconnected",1);clients.splice(clients.indexOf(b),1)})});var dgram=require("dgram"),userver=dgram.createSocket("udp4");userver.on("error",function(b){console.log("UDP server error:\n"+b.stack);userver.close()});
userver.on("message",function(b,c){logger("UDP message from "+c.address+":"+c.port,2);logger("UDP server  msg: "+b,3);socketHandler(b)});userver.on("listening",function(){var b=userver.address();logger("UDP server listening to addr:port: "+b.address+":"+b.port,1)});userver.bind(udpPort);var mysql=require("mysql"),connection=mysql.createConnection({host:"192.168.2.11",user:"coco",password:"coco",database:"dorm"});
function connectDbase(b){connection.connect(function(c){c?(logger("ERROR:: Connecting to the MySQL Database",1),b("connectDbase error","null")):(logger("Connected to the MySQL Database",1),b(null,"mysql connected"))})}function queryDbase(b,c){var a=connection.query(b,function(b,e,f){b?(console.log("queryDbase:: err: "+b+", query: <"+a.sql+">"),c("queryDbase err: "+b,null)):(2<=debug&&console.log("queryDbase:: is: \n",e),c(null,e))})}
function insertDb(b,c,a){var d=connection.query("INSERT INTO "+b+" SET ?",c,function(c,b){c?(console.log("insertDb:: err: "+c+", query ",d.sql),a("Error: "+c,null)):(3<=debug&&console.log("insertDb success:: result: \n",b),a(null,b))})}function updateDb(b,c,a){var d=connection.query("UPDATE "+b+" SET ? WHERE id=?",[c,c.id],function(c,b){c?(console.log("updateDb:: err: "+c+", query ",d.sql),a(c,b)):(3<=debug&&console.log("updateDb success:: result: \n",b),a(null,b))})}
function deleteDb(b,c,a){var d=connection.query("DELETE FROM "+b+" WHERE id=?",c.id,function(c,b){c?(console.log("deleteDb:: err: "+c+", query ",d.sql),a(c,b)):(3<=debug&&console.log("deleteDb success:: result: \n",b),a(null,b))})}function delDevDb(b,c,a){var d=connection.query("DELETE FROM "+b+" WHERE id=? and room=?",[c.id,c.room],function(c,b){c?(console.log("updateDbe:: err: "+c+", query ",d.sql),a(c,b)):(3<=debug&&console.log("deleteDb success:: result: \n",b),a(null,b))})}
function updDevDb(b,c,a){var d=connection.query("UPDATE "+b+" SET ? WHERE id=? AND room=?",[c,c.id,c.room],function(c,b){c?(console.log("updateDbe:: err: "+c+", query ",d.sql),a(c,b)):(3<=debug&&console.log("updDevDb success:: result: \n",b),a(null,b))})}
function createDbase(b){async.series([function(c){config=readConfig();logger("createDb:: readConfig done");c(null,"config rooms: "+config.rooms.length)},function(c){queryDbase("DROP TABLE IF EXISTS rooms",function(a,b){queryDbase("CREATE TABLE rooms(id INT, descr CHAR(128), name CHAR(20) )",function(a,b){c(a,"rooms made, sizeof rooms is:  "+config.rooms.length)})})},function(c){queryDbase("DROP TABLE IF EXISTS devices",function(a,b){queryDbase("CREATE TABLE devices(id CHAR(3), descr CHAR(128), uaddr CHAR(3), gaddr CHAR(12), room CHAR(12), name CHAR(20), type CHAR(12), val INT, lastval INT, brand CHAR(20) )",
function(a,b){c(a,"devices made, sizeof rooms is: "+config.rooms.length)})})},function(c){queryDbase("DROP TABLE IF EXISTS scenes",function(a,b){queryDbase("CREATE TABLE scenes(id INT, descr CHAR(128), val INT, name CHAR(20), seq CHAR(255) )",function(a,b){c(a,"scenes made, sizeof rooms is: "+config.rooms.length)})})},function(c){queryDbase("DROP TABLE IF EXISTS timers",function(a,b){queryDbase("CREATE TABLE timers(id INT, descr CHAR(128), name CHAR(20), scene CHAR(20), tstart CHAR(20), startd CHAR(20), endd CHAR(20), days CHAR(20), months CHAR(20), skip INT )",
function(a,b){logger("createDB timers, sizeof rooms is: "+config.rooms.length);c(a,"timers made")})})},function(c){queryDbase("DROP TABLE IF EXISTS handsets",function(a,b){queryDbase("CREATE TABLE handsets(id INT, descr CHAR(128), name CHAR(20), brand CHAR(20), addr CHAR(20), unit INT, val INT, type CHAR(20), scene CHAR(255) )",function(a,b){c(null,"handsets made")})})},function(c){queryDbase("DROP TABLE IF EXISTS settings",function(a,b){queryDbase("CREATE TABLE settings(id INT, descr CHAR(128), val CHAR(128), name CHAR(20) )",
function(a,b){c(null,"settings made")})})},function(c){queryDbase("DROP TABLE IF EXISTS controllers",function(a,b){queryDbase("CREATE TABLE controllers(id INT, descr CHAR(128), name CHAR(20), fname CHAR(128) )",function(a,b){c(null,"controllers made")})})},function(c){queryDbase("DROP TABLE IF EXISTS brands",function(a,b){queryDbase("CREATE TABLE brands(id INT, descr CHAR(128), name CHAR(20), fname CHAR(128) )",function(a,b){c(null,"brands made")})})},function(c){queryDbase("DROP TABLE IF EXISTS weather",
function(a,b){queryDbase("CREATE TABLE weather(id INT, descr CHAR(128), name CHAR(20), location CHAR(20), brand CHAR(20), address CHAR(20), channel CHAR(8), temperature CHAR(8), humidity CHAR(8), airpressure CHAR(8), windspeed CHAR(8), winddirection CHAR(8), rainfall CHAR(8), luminescence CHAR(8) )",function(a,b){logger("createDB weather, sizeof rooms is: "+config.rooms.length);c(null,"weather made")})})},function(c){var a=[];logger("createDb starting for devices, #devices: "+config.devices.length);
for(var b=0;b<config.devices.length;b++)insertDb("devices",config.devices[b],function(c,b){a.push("d")});c(null,"devices: "+a)},function(c){var a=[];logger("createDb starting for rooms, #rooms: "+config.rooms.length);for(var b=0;b<config.rooms.length;b++)insertDb("rooms",config.rooms[b],function(b){a.push("r")});c(null,"fill rooms"+config.rooms.length)},function(b){for(var a=[],d=0;d<config.scenes.length;d++)insertDb("scenes",config.scenes[d],function(b){a.push("s")});b(null,"scenes: "+a)},function(b){for(var a=
[],d=0;d<config.timers.length;d++)insertDb("timers",config.timers[d],function(b){a.push("t")});b(null,"timers: "+a)},function(b){for(var a=[],d=0;d<config.handsets.length;d++)insertDb("handsets",config.handsets[d],function(b){a.push("h")});b(null,"handsets: "+a)},function(b){for(var a=[],d=0;d<config.settings.length;d++)insertDb("settings",config.settings[d],function(b){a.push("x")});b(null,"settings: "+a)},function(b){for(var a=[],d=0;d<config.controllers.length;d++)insertDb("controllers",config.controllers[d],
function(b){a.push("c")});b(null,"controllers: "+a)},function(b){for(var a=[],d=0;d<config.brands.length;d++)insertDb("brands",config.brands[d],function(b){a.push("b")});b(null,"brands: "+a)},function(b){for(var a=[],d=0;d<config.weather.length;d++)insertDb("weather",config.weather[d],function(b){a.push("w")});b(null,"weather: "+a)}],function(c,a){c?(logger("createDbase:: ERROR: "+c),b(c,a)):(logger("createDbase:: Databases created, result: ",1),console.log(a),b(null,a))})}
function loadDbase(b){async.series([function(b){queryDbase("SELECT * from devices",function(a,d){config.devices=d;lampi_devices=config.devices;for(var e=0;e<lampi_devices.length;e++)"868"==lampi_devices[e].gaddr&&(lampi_admin[lampi_devices[e].uaddr]={val:lampi_devices[e].val,checks:3});b(null,"devices "+d.length)})},function(b){queryDbase("SELECT * from rooms",function(a,d){config.rooms=d;b(null,"rooms "+d.length)})},function(b){queryDbase("SELECT * from scenes",function(a,d){config.scenes=d;b(null,
"scenes "+d.length)})},function(b){queryDbase("SELECT * from timers",function(a,d){config.timers=d;b(null,"timers "+d.length)})},function(b){queryDbase("SELECT * from settings",function(a,d){config.settings=d;b(null,"settings "+d.length)})},function(b){queryDbase("SELECT * from brands",function(a,d){config.brands=d;b(null,"brands "+d.length)})},function(b){queryDbase("SELECT * from handsets",function(a,d){config.handsets=d;b(null,"handsets "+d.length)})},function(b){queryDbase("SELECT * from weather",
function(a,d){config.weather=d;b(null,"weather "+d.length)})},function(b){queryDbase("SELECT * from controllers",function(a,d){config.controllers=d;b(null,"controllers "+d.length)})}],function(c,a){b(null,a)})}
function deviceSet(b,c){var a=lampi_devices[b].uaddr,d=lampi_devices[b].type,e=Math.floor(99*c/32),f={host:"192.168.2.52",path:"",port:"8083",method:"GET",headers:{"Content-Type":"application/json"}};callSet=function(b){b.on("data",function(a){logger("WARNING deviceSet received data: "+a,2)});b.on("end",function(){logger("deviceSet has ended",2)});b.on("error",function(){logger("deviceSet ERROR Updating dev: "+a+"",1)})};switch(d){case "dimmer":f.path="/ZWaveAPI/Run/devices["+a+"].instances[0].commandClasses[38].Set("+
e+")";break;case "switch":f.path="/ZWaveAPI/Run/devices["+a+"].instances[0].commandClasses[37].Set("+e+")";break;case "thermostat":f.path="/ZWaveAPI/Run/devices["+a+"].instances[0].commandClasses[67].ThermostatSetPoint.Set(1,"+e+")";break;default:logger("deviceSet:: Unknown type "+d)}http.request(f,callSet).end();lampi_admin[a].val=c}
function deviceGet(b,c){var a=lampi_devices[b].uaddr,d=lampi_devices[b].val,e=lampi_admin[a].val,f;http.request({host:"192.168.2.52",path:"/ZWaveAPI/Run/devices["+a+"].Basic.Get()",port:"8083",method:"GET",headers:{"Content-Type":"application/json"}},function(g){g.on("data",function(a){logger("ERROR deviceGet received data: "+a,3)});g.on("end",function(){logger("deviceGet:: device: "+a+", lampi dev index: "+b,2);switch(c){case "switch":if(0==devices[a].instances[0].commandClasses[37].data.interviewDone.value){console.log("ERROR:: Switch device "+
a+" Dead");return}f=devices[a].instances[0].commandClasses[37].data.level.value+0;break;case "dimmer":if(!1===devices[a].instances[0].commandClasses[38].data.interviewDone.value){console.log("ERROR:: Dimmer device "+a+" Dead");return}f=Math.ceil(devices[a].instances[0].commandClasses[38].data.level.value/99*32);break;case "thermostat":if(!1===devices[a].instances[0].commandClasses[67].data.interviewDone.value){logger("ERROR:: Thermostat device "+a+" Dead",2);return}f=devices[a].instances[0].commandClasses[67].data[1].val.value;
return;default:logger("ERROR lampi type not supported: "+c);return}logger("Dev: "+a+", lVal: "+d+", aVal: "+e+", zVal: "+f,2);if(f==d&&e==d)logger("X X X, all values of device "+a+" are equal",3);else if(f==d&&e!=d)logger("Y X Y, updating device "+a+" to zVal: "+f,1),lampi_admin[a].val=f;else if(f!=d&&e==f){logger("Y X X, The gui valui of "+a+" has changed",1);lampi_devices[b].val=f;updDevDb("devices",lampi_devices[b],function(b){logger("deviceGet:: store_device "+a+" finished OK",1)});var g="!R"+
lampi_devices[b].room+"D"+a+"F",g=0==f?g+"0":g+"dP"+f,g={tcnt:""+tcnt++,type:"json",action:"gui",cmd:"zwave",gaddr:"868",uaddr:""+a,val:""+f,message:g};logger("deviceGet:: to broadcast: "+JSON.stringify(g),1);broadcast(JSON.stringify(g),null)}else if(f!=d&&e==d){logger("X X Y, Z-Wave changed; Update lampi gui for device "+a+" to value "+f,1);g={tcnt:""+tcnt++,type:"raw",action:"gui",cmd:"zwave",gaddr:"868",uaddr:""+a,val:""+f,message:"!R"+lampi_devices[b].room+"D"+a+"F"+f};switch(c){case "switch":g.message=
"!R"+lampi_devices[b].room+"D"+a+"F"+f;break;case "dimmer":g.message="!R"+lampi_devices[b].room+"D"+a+"FdP"+f;break;default:logger("No Manual Update Action defined")}logger("Sending data to broadcast: "+JSON.stringify(g),2);broadcast(JSON.stringify(g));lampi_admin[a].val=f;logger("Updated dimmer to "+f+", cmd string: "+g.message)}else logger("Y X Z, reset admin for device "+a+" to lampi defined value "+d,1),lampi_admin[a].val=d});g.on("error",function(){logger("ERROR Updating dev: "+a+"",1)});g.on("timeout",
function(){logger("deviceGet:: TIMEOUT");g.abort()});g.setTimeout(5E3)}).end()}var S=require("string");function getTime(){var b=new Date;return S(b.getHours()).padLeft(2,"0").s+":"+S(b.getMinutes()).padLeft(2,"0").s+":"+S(b.getSeconds()).padLeft(2,"0").s}function getTicks(){return Math.floor(Date.now()/1E3)}function printTime(b){b=new Date(b);return S(b.getHours()).padLeft(2,"0").s+":"+S(b.getMinutes()).padLeft(2,"0").s+":"+S(b.getSeconds()).padLeft(2,"0").s}
function logger(b,c){c=c||debug;if(debug>=c){var a=new Date,a=("00"+(a.getMonth()+1)).slice(-2)+"/"+("00"+a.getDate()).slice(-2)+"/"+a.getFullYear()+" "+("00"+a.getHours()).slice(-2)+":"+("00"+a.getMinutes()).slice(-2)+":"+("00"+a.getSeconds()).slice(-2);console.log("["+a+"] "+b)}}
function findDevice(b,c){logger("findDevice:: length: "+lampi_devices.length+", room: "+b+", uaddr: "+c,2);var a;for(a=0;a<lampi_devices.length&&(lampi_devices[a].room!=b||lampi_devices[a].uaddr!=c);a++);return a<lampi_devices.length?a:-1}function idDevice(b,c){logger("findDevice:: length: "+lampi_devices.length+", room: "+b+", id: "+c,2);var a;for(a=0;a<lampi_devices.length&&(lampi_devices[a].room!=b||lampi_devices[a].id!=c);a++);return a<lampi_devices.length?a:-1}
function gaddrDevice(b,c){logger("gaddrDevice:: length: "+lampi_devices.length+", gaddr: "+b+", uaddr: "+c,2);var a;for(a=0;a<lampi_devices.length&&(lampi_devices[a].gaddr!=b||lampi_devices[a].uaddr!=c);a++);return a<lampi_devices.length?a:-1}function findScene(b){var c;for(c=0;c<config.scenes.length&&config.scenes[c].name!=b;c++);return c<config.scenes.length?c:-1}
function addrSensor(b,c){logger("addrSensor:: length: "+config.weather.length+", address: "+b+", channel: "+c,2);var a;for(a=0;a<config.weather.length&&(config.weather[a].address!=b||config.weather[a].channel!=c);a++);return a<config.weather.length?a:-1}function delFromArray(b,c){var a;for(a=0;a<b.length&&b[a].id!=c.id;a++);b.splice(a,1)}function updFromArray(b,c){var a;for(a=0;a<b.length;a++)if(b[a].id==c.id){b[a]=c;break}}
function allOff(b,c){for(var a=[],d=[],e=0;e<lampi_devices.length;e++)if(lampi_devices[e].room==b){var f=lampi_devices[e].brand,f={tcnt:""+tcnt++,type:"raw",action:"gui",cmd:config.brands[f].fname,gaddr:""+lampi_devices[e].gaddr,uaddr:""+lampi_devices[e].uaddr,val:"0",message:"!R"+b+"D"+lampi_devices[e].uaddr+"F0"};d.push(JSON.stringify(f));a.push(function(a){setTimeout(function(){var b=d.shift();logger("allOff:: timeout str: "+b);broadcast(b,c);a(null,"yes")},2E3)});"868"==lampi_devices[e].gaddr&&
deviceSet(e,"0")}async.series(a,function(a,b){a?logger("allOFF:: ERROR ERROR: "+a,1):logger("allOff:: OKE OKE  finished, results: "+b,2)})}function alarmHandler(b,c){logger("alarmHandler:: buf: "+b,1)}
function consoleHandler(b,c){logger("consoleHandler:: request: "+b,1);var a="";switch(b){case "logs":exec("tail -30 /home/pi/log/PI-node.log",function(d,e,h){a=null===d?a+(e.split("\n").join("<br>")+"<br><br>"+h):a+("<br>  CONSOLE ERROR:   "+d+"     <br>  "+h);d={tcnt:""+tcnt++,type:"raw",action:"console",request:b,response:a};c.send(JSON.stringify(d))});return;case "zlogs":break;case "sunrisesunset":var d=SunCalc.getTimes(new Date,51.5,-.1),e=d.sunrise.getHours()+":"+d.sunrise.getMinutes(),d=d.sunset.getHours()+
":"+d.sunset.getMinutes(),a="Sunrise: "+e+"\nSunset: "+d;break;case "clients":logger("Active socket Clients:: ",1);a="<br>";clients.forEach(function(b){a+=b.name+" : "+b.type+"    <br>"});break;case "rebootdaemon":a="<br>Rebooting Node Daemon Now<br><br>this will take a minute<br>";setTimeout(function(){exec("nohup /home/pi/scripts/PI-node -r &",function(a,b,c){})},2E3);break;default:logger("consoleHandler:: Unknown request: "+b),a="Unknown request<br>"}e={tcnt:""+tcnt++,type:"raw",action:"console",
request:b,response:a};c.send(JSON.stringify(e))}
function dbaseHandler(b,c,a){logger("dbaseHandler:: cmd: "+b,1);2<=debug&&(logger("dbaseHandler:: cmd: "+b+", args: ",2),console.log(c));switch(b){case "add_room":insertDb("rooms",c,function(a){logger("add_room finished OK "+a,1)});config.rooms.push(c);break;case "delete_room":deleteDb("rooms",c,function(a){logger("delete_room finished OK "+a,1)});delFromArray(config.rooms,c);break;case "add_scene":insertDb("scenes",c,function(a){logger("add_scene finished OK "+a,1)});config.scenes.push(c);break;
case "delete_scene":deleteDb("scenes",c,function(a){logger("delete_scenes finished OK "+a,1)});delFromArray(config.scenes,c);break;case "store_scene":updateDb("scenes",c,function(a){logger("store_scenes finished OK "+a,1)});updFromArray(config.scenes,c);break;case "add_timer":insertDb("timers",c,function(a){logger("add_timer finished OK "+a,1)});config.timers.push(c);break;case "delete_timer":deleteDb("timers",c,function(a){logger("delete_timers finished OK "+a,1)});delFromArray(config.timers,c);
break;case "store_timer":updateDb("timers",c,function(a){logger("store_timers finished OK "+a,1)});updFromArray(config.timers,c);break;case "add_handset":insertDb("handsets",c,function(a){logger("add_handset finished OK "+a,1)});config.handsets.push(c);break;case "delete_handset":deleteDb("handsets",c,function(a){logger("delete_handsets finished OK "+a,1)});delFromArray(config.handsets,c);break;case "add_weather":insertDb("weather",c,function(a){logger("add_weather finished OK "+a,1)});config.weather.push(c);
break;case "delete_weather":deleteDb("weather",c,function(a){logger("delete_weather finished OK "+a,1)});delFromArray(config.weather,c);break;case "store_setting":updateDb("settings",c,function(a){logger("store_settings finished OK "+a,1)});updFromArray(config.settings,c);"debug"==c.name&&(debug=Number(c.val));break;case "add_device":insertDb("devices",c,function(a){logger("add_device finished OK",1)});config.devices.push(c);break;case "delete_device":delDevDb("devices",c,function(a){logger("delete_device finished OK",
1)});b=idDevice(c.room,c.id);-1!=b?config.devices.splice(b,1):logger("dbaseHandler:: delete_device failed for index: "+b+", room: "+c.room+", id: "+c.id);break;case "store_device":updDevDb("devices",c,function(a){logger("store_device finished OK",1)});b=idDevice(c.room,c.id);-1!=b?config.devices[b]=c:logger("dbaseHandler:: store_device failed for index: "+b);break;default:logger("dbaseHandler:: Unknown command: "+b,1)}}
function createEnergyDb(b,c){var a=[];logger("createEnergyDb:: ",1);a+=void 0!==c.kw_hi_use?"DS:kw_hi_use:COUNTER:600:0:999999999 ":"";a+=void 0!==c.kw_lo_use?"DS:kw_lo_use:COUNTER:600:0:999999999 ":"";a+=void 0!==c.kw_hi_ret?"DS:kw_hi_ret:COUNTER:600:0:999999999 ":"";a+=void 0!==c.kw_lo_ret?"DS:kw_lo_ret:COUNTER:600:0:999999999 ":"";a+=void 0!==c.gas_use?"DS:gas_use:COUNTER:600:0:999999999 ":"";a+=void 0!==c.kw_act_use?"DS:kw_act_use:GAUGE:600:0:999999 ":"";a+=void 0!==c.kw_act_ret?"DS:kw_act_ret:GAUGE:600:0:999999 ":
"";a+=void 0!==c.kw_ph1_use?"DS:kw_ph1_use:GAUGE:600:0:999999 ":"";a+=void 0!==c.kw_ph2_use?"DS:kw_ph2_use:GAUGE:600:0:999999 ":"";a+=void 0!==c.kw_ph3_use?"DS:kw_ph3_use:GAUGE:600:0:999999 ":"";a+="RRA:AVERAGE:0.5:1:360 RRA:AVERAGE:0.5:30:288 ";a+="RRA:AVERAGE:0.5:90:672 ";a+="RRA:AVERAGE:0.5:360:744 ";a+="RRA:AVERAGE:0.5:216:1460 ";a+="RRA:MIN:0.5:90:672 ";a+="RRA:MAX:0.5:90:672 ";a="rrdtool create "+b+" --step 20 "+a;logger("createEnergyDb:: execStr: "+a,1);exec(a,function(a,b,f){null===a?(logger("createEnergyDb:: ok, stdout: "+
b+"; stderr: "+f,2),energyHandler(c)):logger("createEnergyDb:: ERROR: "+a+"; stderr: "+f)})}
function energyHandler(b){var c=rrdDir+"/db/e350.rrd",a=[];logger("energyHandler:: action: "+b.action+", brand: "+b.brand,1);fs.existsSync(c)||(logger("weatherHandler:: rrdtool db "+c+" does not exist ... creating",1),createEnergyDb(c,b));a+=":"+Math.floor(1E3*Number(b.kw_hi_use));a+=":"+Math.floor(1E3*Number(b.kw_lo_use));a+=":"+Math.floor(1E3*Number(b.kw_hi_ret));a+=":"+Math.floor(1E3*Number(b.kw_lo_ret));a+=":"+Math.floor(1E3*Number(b.gas_use));a+=":"+Math.floor(1E3*Number(b.kw_act_use));a+=":"+
Math.floor(1E3*Number(b.kw_act_ret));a+=":"+Math.floor(1E3*Number(b.kw_ph1_use));a+=":"+Math.floor(1E3*Number(b.kw_ph2_use));a+=":"+Math.floor(1E3*Number(b.kw_ph3_use));b="rrdtool update "+c+" N"+a;logger("energyHandler:: execStr: "+b,2);exec(b,function(a,b,c){null===a?logger("energyHandler:: stdout: "+b+"; stderr: "+c,2):logger("energyHandler:: ERROR: "+a+"; stderr: "+c)})}
function guiHandler(b,c){logger("guiHandler:: buf: "+b,1);var a=gaddrDevice(b.gaddr,uaddr);"868"==lampi_devices[a].gaddr&&deviceSet(a,b.val);a={tcnt:""+tcnt++,type:"json",action:"gui",cmd:b.cmd,gaddr:""+b.gaddr,uaddr:""+b.uaddr,val:""+b.val,message:b.ics};logger("guiHandler:: to broadcast: "+JSON.stringify(a),2);broadcast(JSON.stringify(a),c)}
function icsHandler(b,c){logger("icsHandler:: receiving message: "+b.message,2);var a=b.message,d=/\d+/;switch(a.substr(0,2)){case "!R":var e=a.match(d);if(-1!=a.indexOf("Fa")){allOff(e,c);break}var f=a.indexOf("D"),g=a.substr(f+1,2).match(d);logger("icsHandler:: uaddr: "+g,2);f=a.indexOf("FdP");-1!=f?(d=Number(a.substr(f+3,2).match(d)),logger("icsHandler:: Found dimmer value: "+d,2)):(f=a.indexOf("F"),d=a.substr(f+1,2).match(d),0==d&&(d="0"),logger("icsHandler:: Found switch value: "+d,2));f=findDevice(e,
g);if(0>f||f>config.devices.length){logger("icsHandler:: ERROR for index: "+f+", #devices: "+config.devices.length+" room: "+e+", uaddr: "+g+", ics: "+a,1);break}var e=config.devices[f].gaddr,h=config.brands[config.devices[f].brand].fname;"868"==lampi_devices[f].gaddr&&deviceSet(f,d);a={tcnt:""+tcnt++,type:"raw",action:"gui",cmd:h,gaddr:""+e,uaddr:""+g,val:""+d,message:a};config.devices[f].val=d;updDevDb("devices",config.devices[f],function(a){logger("icsHandler:: updDevDb finished OK",1)});logger("icsHandler:: to broadcast: "+
JSON.stringify(a),2);broadcast(JSON.stringify(a),c);break;case "!F":queue.qinsert({ticks:getTicks(),scene:"gui",seq:"weetikveel"});break;case "!T":logger("icsHandler:: Timer command");queue.qinsert({ticks:getTicks(),scene:"gui",seq:"!R1D1F0"});break;case "!A":logger("icsHandler:: Handset command");break;case "!Q":logger("icsHandler:: All Off command");break;default:logger("icsHandler:: Unknown command ics code: <"+a+">",1)}}
function createWeatherDb(b,c){var a=[];logger("createWeatherDb:: ",1);a+=void 0!==c.temperature?"DS:temperature:GAUGE:600:-20:95 ":"";a+=void 0!==c.humidity?"DS:humidity:GAUGE:600:0:100 ":"";a+=void 0!==c.airpressure?"DS:airpressure:GAUGE:600:900:1100 ":"";a+=void 0!==c.altitude?"DS:altitude:GAUGE:600:-100:1200 ":"";a+=void 0!==c.windspeed?"DS:windspeed:GAUGE:600:0:200 ":"";a+=void 0!==c.winddirection?"DS:winddirection:GAUGE:600:0:359 ":"";a+=void 0!==c.rainfall?"DS:rainfall:GAUGE:600:0:25 ":"";a+=
"RRA:AVERAGE:0.5:1:480 RRA:AVERAGE:0.5:5:672 ";a+="RRA:AVERAGE:0.5:20:744 ";a+="RRA:AVERAGE:0.5:480:365 ";a+="RRA:MIN:0.5:20:720 ";a+="RRA:MAX:0.5:20:720 ";a+="RRA:AVERAGE:0.5:20:720 ";a="rrdtool create "+b+" --step 180 "+a;logger("createWeatherDb:: execStr: "+a,1);exec(a,function(a,b,f){null===a?(logger("createWeatherDb:: ok, stdout: "+b+"; stderr: "+f,2),weatherHandler(c)):logger("createWeatherDb:: ERROR: "+a+"; stderr: "+f)})}
function weatherHandler(b){var c=addrSensor(b.address,b.channel),c=config.weather[c].name,a=rrdDir+"/db/"+c+".rrd",d=[];logger("weatherHandler:: name: "+c+", addr: "+b.address+", chan: "+b.channel+", temp: "+b.temperature,1);fs.existsSync(a)||(logger("weatherHandler:: rrdtool db "+a+" does not exist ... creating",1),createWeatherDb(a,b));d+=void 0!==b.temperature?":"+Math.round(b.temperature):"";d+=void 0!==b.humidity?":"+Number(b.humidity):"";d+=void 0!==b.airpressure?":"+Number(b.airpressure):"";
d+=void 0!==b.altitude?":"+Number(b.altitude):"";d+=void 0!==b.windspeed?":"+Number(b.windspeed):"";d+=void 0!==b.winddirection?":"+Number(b.winddirection):"";d+=void 0!==b.rainfall?":"+Number(b.rainfall):"";b="rrdtool update "+a+" N"+d;logger("weatherHandler:: execStr: "+b,2);exec(b,function(a,b,c){null===a?logger("weatherHandler:: stdout: "+b+"; stderr: "+c,2):logger("weatherHandler:: ERROR: "+a+"; stderr: "+c,0)})}
function socketHandler(b,c){var a=b+"",d=a.search(/\}{/);if(-1!=d){var e=a.substr(0,d+1),a=a.substr(d+1);logger("socketHandler:: string 1: "+e,2);logger("socketHandler:: string 2: "+a,2);socketHandler(e,c);socketHandler(a,c)}else{logger("socketHandler:: Starting with data: "+b,2);try{e=JSON.parse(a)}catch(f){logger("socketHandler:: JSON parse error: "+f,1);return}void 0==c&&(logger("socketHandler socket undefined. action: "+e.action,2),2<=debug&&console.log("data: ",a),c=null);logger("Handler:: Action: "+
e.action,2);switch(e.action){case "alarm":logger("socketHandler:: alarm received",1);break;case "console":consoleHandler(e.request,c);break;case "dbase":dbaseHandler(e.cmd,e.message,c);break;case "energy":energyHandler(e);broadcast(a,c);break;case "gui":"raw"==e.type&&icsHandler(e,c);"json"==e.type&&guiHandler(e,c);break;case "load_database":logger("socketHandler:: load_database received",1);a={tcnt:tcnt++,type:"raw",action:"load_database",cmd:"",response:config};c.send(JSON.stringify(a),function(a){void 0!==
a&&(logger("socketHandler:: ERROR returning load database "+a,1),logger("socketHandler:: Socket: "+c.name+", type: "+c.type,1))});break;case "ping":case "PING":logger("socketHandler:: ping received",2);a={tcnt:tcnt++,action:"ack",type:"raw",message:"OK"};"ws"==c.type&&c.send(JSON.stringify(a));break;case "scene":logger("socketHandler:: scene received",2);break;case "weather":weatherHandler(e);broadcast(a,c);break;default:logger("SocketHandler:: action not recognized: "+e.action,1)}}}
var queue=new function(){this.qlist=[];this.qpush=function(b){b={ticks:getTicks(),name:b.name,seq:b.seq};this.qlist.push(b)};this.qinsert=function(b){var c;for(c=0;c<this.qlist.length&&!(this.qlist[c].ticks>b.ticks);c++);this.qlist.splice(c,0,b)};this.qpop=function(){var b,c=getTicks();for(b=0;b<this.qlist.length&&!(this.qlist[b].ticks>c);b++);return this.qlist.splice(0,b)};this.qprint=function(){var b=getTicks(),c=queue.qtim();if(null!=c)for(logger("print queue for ticks: "+b+", next runnable: "+
c+" secs",1),b=0;b<this.qlist.length;b++)console.log("\t\t",this.qlist[b])};this.qtim=function(){if(0==this.qlist.length)return null;var b=getTicks();return this.qlist[0].ticks-b}};queue.qinsert({ticks:getTicks()+30,name:"gui",seq:"!R1D1FdP10"});queue.qinsert({ticks:getTicks()+45,name:"gui",seq:"!R1D1F0"});var exec=require("child_process").exec;
function queueHandler(){for(var b=queue.qpop();null!=b&&0<b.length;){2<=debug&&console.log("queueHandler:: pop task: ",b);for(var c=0;c<b.length;c++){var a;1<=debug&&console.log("\t\tqueueHandler:: processing task: ",b[c]);"gui"!=b[c].name?(a=findScene(b[c].name),a=config.scenes[a].seq.split(",")):a=b[c].seq.split(",");for(var d=0;d<a.length;d++){var e={tcnt:""+tcnt++,type:"raw",action:"gui",cmd:"",gaddr:"",uaddr:"",val:"",message:a[d]};icsHandler(e)}}b=queue.qpop()}2<=debug&&queue.qprint()}logger("MAIN part started");
var async=require("async"),SunCalc=require("suncalc");async.series([function(b){connectDbase(b)},function(b){loadDbase(b)},function(b){zwave_init(function(c,a){b(null,a)})}],function(b,c){main(b,c)});function main(b,c){loops=[];logger("All Init functions done",1);1<=debug&&console.log("Return values: \n",c);alarm_loop();timer_loop();poll_loop();log_loop()}
function timer_loop(){logger("Starting timer_loop",1);var b=setInterval(function(){var b=new Date,a=Math.floor(b.getTime()/1E3);logger("Loop 0, ticks: "+a+", devices: "+Object.keys(devices).length,2);logger("----------- TIMER EXPIRED? ------------",1);queryDbase("SELECT * from timers",function(d,e){config.timers=e;logger("timer_loop:: #timers: "+e.length,2);queryDbase("SELECT * from scenes",function(d,g){config.scenes=g;logger("timer_loop:: now   date: "+b,1);for(var h=SunCalc.getTimes(b,52.13,5.58),
l=0;l<e.length;l++){var p=e[l].tstart.split(":"),q=p[0],m=p[1],p=e[l].startd.split("/"),r=p[0],t=p[1],A=Number(p[2])+2E3,p=e[l].endd.split("/"),w=p[0],B=p[1],p=Number(p[2])+2E3,n,v,x,y,z,u;x=b.getDate();y=b.getMonth();z=b.getFullYear();switch(q){case "96":u=1800*-Number(m);n=h.sunrise.getHours();v=h.sunrise.getMinutes();break;case "97":u=1800*Number(m);n=h.sunrise.getHours();v=h.sunrise.getMinutes();break;case "98":u=1800*-Number(m);n=h.sunset.getHours();v=h.sunset.getMinutes();break;case "99":u=
1800*Number(m);n=h.sunset.getHours();v=h.sunset.getMinutes();break;default:u=0,n=q,v=m}n=Math.floor((new Date(z,y,x,n,v,0,0)).getTime()/1E3)+u;logger("Timer correction is: "+u,2);logger("timer_loop:: run   date: "+n,2);logger("timer_loop:: now   date: "+a,2);0<n-a&&logger("timer_loop:: name: "+e[l].name+", runnable in: "+(n-a)+" secs",1);if(a<n)logger("Timer not yet started ",2);else if(w=Math.floor((new Date(p,B-1,w,0,0,0,0)).getTime()/1E3),logger("timer_loop:: end date:   "+w,2),a>w)logger("Timer enddate reached: "+
w,1);else if(q=Math.floor((new Date(A,t-1,r,q,m,0,0)).getTime()/1E3),logger("timer_loop:: start date: "+q,2),a<q)logger("Timer before start date",1);else if(a-n>timer_interval/500+1)logger("Timer already started some time ago",2);else if(a-n>timer_interval/1E3)logger("Timer already started",2);else if("x"==e[l].months[Number(b.getMonth())-1])logger("Timer, this is a blackout month",1);else if("x"==e[l].days[Number(b.getDay())-1])logger("Timer, this is a blackout day",1);else for(logger("timer_loop:: Starting timer name: "+
e[l].name,1),q=0;q<g.length;q++)if(g[q].name==e[l].scene)for(m=g[q].seq.split(","),r=0;r<m.length;r+=2)logger("scene item: "+r/2+", val: "+m[r]+", time: "+m[r+1],1),t=m[r+1].split(":"),t=+(3600*t[0])+60*t[1]+t[2],logger("qinsert:: ticks: "+t+", name: "+g[q].name+", seq: "+m[r],1),queue.qinsert({ticks:Number(t)+getTicks(),name:"gui",seq:m[r]})}})})},timer_interval);loops.push(b)}
function log_loop(){logger("Starting log_loop");var b=0,c=setInterval(function(){2<=debug&&(logger("----------- ACTIVE CLIENTS ------------",1),logger("Active socket Clients:: ",1),clients.forEach(function(a){console.log(a.type+" Client: "+a.name)}));logger("----------- ACTIVE ZWAVE DEVICES ------------",1);zwave_init(function(a,b){logger("log_loop:: zwave_init: "+b,1)});var a=Math.floor(Date.now()/1E3);logger("Loop "+b+", ticks: "+a+", devices: "+Object.keys(devices).length,2);Object.keys(devices).forEach(function(a){if(1<
a){logger("key: "+a,1);var b=devices[a].instances[0].commandClasses;2<debug&&console.log(b);Object.keys(b).forEach(function(c){switch(c){case "37":var g=b[c].data.level.value+0,h=b[c].data.level.updateTime,l=b[c].data.level.invalidateTime;logger("\tCl: "+c+" Switch           , val "+g+", upd: "+printTime(1E3*h)+", inval: "+printTime(1E3*l),1);break;case "38":g=b[c].data.level.value+0;h=b[c].data.level.updateTime;l=b[c].data.level.invalidateTime;logger("\tCl: "+c+" Dimmer           , val "+g+", upd: "+
printTime(1E3*h)+", inval: "+printTime(1E3*l),1);break;case "39":logger("\tCl: "+c+" Dimmer?          , val "+g,2);break;case "48":if(0==b[c].data.interviewDone.value){logger("WARNING:: Device "+c+" Dead",1);break}g=b[c].data[1].level.value+0;h=b[c].data[1].level.updateTime;logger("\tCl: "+c+" PIR              , val "+g+", upd: "+printTime(1E3*h),1);break;case "49":if(0==b[c].data.interviewDone.value){logger("WARNING:: Device "+c+" Dead",0);break}1 in b[c].data&&(g=b[c].data[1].val.value+0,logger("\tCl: "+
c+" Temp             , val "+g,1),h=addrSensor(a,0),config.weather[h].temperature=g);3 in b[c].data&&(g=b[c].data[3].val.value+0,logger("\tCl: "+c+" Lumi             , val "+g,1));5 in b[c].data&&(g=b[c].data[5].val.value+0,logger("\tCl: "+c+" Humi             , val "+g,1),h=addrSensor(a,0),config.weather[h].humidity=g);c={tcnt:""+tcnt++,action:"weather",type:"json",address:a+"",channel:"0",temperature:config.weather[h].temperature,humidity:config.weather[h].humidity,airpressure:"",windspeed:"",winddirection:"",
rainfall:""};logger("log_loop:: starting weather handler for device: "+a,2);weatherHandler(c);broadcast(JSON.stringify(c),null);break;case "67":if(0==b[c].data.interviewDone.value){logger("WARNING: Thermostat device "+a+" Dead",0);break}g=b[c].data[1].val.value+0;logger("\tCl: "+c+" Thermostat       , val "+g,1);break;case "112":logger("\tCl: "+c+" Configuration",2);break;case "128":g=b[c].data.last.value;h=b[c].data.last.updateTime;logger("\tCl: "+c+" Battery         , "+g+"%, upd: "+printTime(1E3*
h),1);break;case "132":logger("\tCl: "+c+" Wakeup",2);break;case "133":logger("\tCl: "+c+" Association",2);break;case "142":logger("\tCl: "+c+" MultiCh Assoc",2);break;case "143":logger("\tCl: "+c+" MultiCh Assoc",2);break;case "156":logger("\tCl: "+c+" Alarm Sensor",1);break;default:logger("\tCl: "+c+" Device not yet handled",2)}})}});b++},log_interval);loops.push(c)}
function poll_loop(){logger("Starting poll_loop");var b=setInterval(function(){logger("-----------       POLL      ------------",1);connection.query("SELECT * from devices",function(b,a,d){if(b)throw b;config.devices=a;lampi_devices=config.devices;3<=debug&&console.log("query devices:: is: \n",a);for(b=0;b<lampi_devices.length;b++)"868"==lampi_devices[b].gaddr&&deviceGet(b,lampi_devices[b].type)})},poll_interval);loops.push(b)}
function alarm_loop(){logger("Starting alarm_loop");var b=setInterval(function(){var b=Math.floor(Date.now()/1E3);zwave_upd_options.path="/ZWaveAPI/Data/"+(b-alarm_interval);logger("alarm_loop:: zTime: "+(b-alarm_interval),2);http.request(zwave_upd_options,zwave_upd_cb).end();!0===devices[9].instances[0].commandClasses[48].data[1].level.value&&(console.log("Fibaro ALARM"),b={tcnt:868,type:"json",action:"alarm",scene:"Living on",message:"Fibaro ALARM"},broadcast(JSON.stringify(b),null));!0===devices[11].instances[0].commandClasses[48].data[1].level.value&&
(console.log("Aeon ALARM"),b={tcnt:868,type:"json",action:"alarm",scene:"",message:"AEON ALARM"},broadcast(JSON.stringify(b),null),devices[11].instances[0].commandClasses[48].data[1].level.value=!1);logger("----------- QUEUE HANDLER -------------",2);queueHandler()},alarm_interval);loops.push(b)}logger("LamPI-node.js completely parsed");